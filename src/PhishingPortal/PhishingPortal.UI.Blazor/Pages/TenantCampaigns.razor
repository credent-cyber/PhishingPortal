@page "/tenant-campaigns"
@using PhishingPortal.Dto
@using PhishingPortal.UI.Blazor.Client

@inject TenantClient client
@inject ILogger<TenantCampaigns> logger

<h3>Campaigns</h3>
@if (campaigns == null)
{
    <div class="loading-bar"></div>
}
else
{

    <div class="row">
        <div class="col-sm-10 col-lg-3 col-md-3"> 
            <a class="btn btn-primary" href="tenant-campaign-config"><span class="oi oi-plus"></span></a></div>
    </div>
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Description</th>
                <th>ScheduleType</th>
                <th>Schedule</th>
                <th>IsActive</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in campaigns.OrderByDescending(o => o.CreatedOn))
            {
                <tr>
                    <td><a class="btn-link" href="tenant-campaign-config/@c.Id">@c.Id</a></td>
                    <td>@c.Name</td>
                    <td>@c.Description</td>
                    <td>@c.Schedule.ScheduleType.ToString()</td>
                    <td>
                        @c.Schedule.ScheduleInfo
                    </td>
                    <td>@c.IsActive</td>
                </tr>
            }
        </tbody>
        <tfoot>
        </tfoot>
    </table>


}
@code {
    string message = string.Empty;
    IEnumerable<Campaign> campaigns = null;
    int pageSize = 10;
    int pageIndex = 0;
    protected override async Task OnInitializedAsync()
    {
        campaigns = await client.GetCampaignsAsync(pageIndex, pageSize);

        if (campaigns == null || campaigns.Count() == 0)
            message = "No campaigns found!";



    }
}
