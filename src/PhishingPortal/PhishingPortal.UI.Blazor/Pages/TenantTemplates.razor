@page "/tenant-templates"

@using PhishingPortal.Dto
@using PhishingPortal.UI.Blazor.Client
@using System.Text.RegularExpressions
@using Blazored.TextEditor

@inject TenantClient client
@inject ILogger<TenantCampaigns> logger
@inject IJSRuntime JSRuntime

@if (Templates == null)
{
    <div class="col-sm-12" style="margin-top:45vh">

            <div class="card-header">
              <div class="loading-bar"></div>
            </div>
     
    </div>
}
else
{
    <div class="row">
      <div class="col-sm-12">
        <div class="card">
            <div class="card-header">
                <h5>All Templates</h5>
                <a class="btn btn-primary" href="tenant-templates-config" ><span class="oi oi-plus"></span></a>            
            </div>
            <div class="card-body">

                   <div class="col-md-12" style="padding: 0;">
                    <div class="bt-wizard" id="tabswizard">
                        <ul class="nav nav-pills">
                        <li class="nav-item"><a href="#tabs-t-tab1" class="nav-link rounded-0 active" data-toggle="tab">Email</a></li>
                        <li class="nav-item"><a href="#tabs-t-tab2" class="nav-link rounded-0" data-toggle="tab">SMS</a></li>
                        <li class="nav-item"><a href="#tabs-t-tab3" class="nav-link rounded-0" data-toggle="tab">Whatsapp</a></li>
                        </ul>
                           <div class="tab-content card">
                               <div class="pt-1 bg-primary"></div>
                               <div class="tab-pane card-body pt-4 active show" id="tabs-t-tab1">
                                  <div class="table-responsive">
                                     <table id="email" class="table table-striped table-bordered nowrap">
                                        <thead>
                                        <tr role="row">
                                                <th>ID</th>
                                                <th>Template Name</th>
                                                <th>IsActive</th>
                                                <th>IsHtml</th>
                                                <th>Campaign Type</th>
                                                <th>Version</th>
                                                <th>Preview</th>                  
                                        </tr>
                                        </thead>
                                        <tbody> 
                                               @foreach (var t in Templates.OrderByDescending(o=>o.Id).Where(o=>o.Type==CampaignType.Email))
                                               {
                                                    <tr>
                           
                                                        <td>@t.Id </td>                        
                                                        <td>@t.Name </td>                        
                                                        <td>@t.IsActive</td>
                                                        <td>@t.IsHtml</td>
                                                        <td>@t.Type</td>
                                                        <td>@t.Version</td>
                  
                                                        <td>
                                                           
                                                            <button  @onclick="() => OnPreviewClick(t)" title="View" class="btn btn-info btn-sm"><i class="fa fa-eye"></i></button>
                                                            <a  href="tenant-templates-config/@t.Id" title="Edit" class="btn btn-primary btn-sm"><i class="fa fa-pencil-square-o"></i></a>
                                                            @*<button  title="Delete" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>*@
                                                        </td>
                                                    </tr>
                                               }
                                        </tbody>                                                                            
                                     </table>
                                  </div>
                               </div>
                               <div class="tab-pane card-body pt-4" id="tabs-t-tab2">                              
                                      <div class="tab-pane card-body pt-4 active show" id="tabs-t-tab2">
                                          <div class="table-responsive">
                                             <table id="sms" class="table table-striped table-bordered nowrap">
                                                <thead>
                                                <tr role="row">
                                                    <th>ID</th>
                                                    <th>Template Name</th>
                                                    <th>IsActive</th>
                                                    <th>IsHtml</th>
                                                    <th>Campaign Type</th>
                                                    <th>Version</th>
                                                    <th>Preview</th>   
                                                </tr>
                                                </thead>
                                                <tbody> 
                                                     @foreach (var t in Templates.OrderByDescending(o=>o.Id).Where(o=>o.Type==CampaignType.Sms))
                                                    {
                                                        <tr>
                           
                                                            <td>@t.Id </td>                        
                                                            <td>@t.Name </td>                        
                                                            <td>@t.IsActive</td>
                                                            <td>@t.IsHtml</td>
                                                            <td>@t.Type</td>
                                                            <td>@t.Version</td>
                  
                                                            <td>
                                                           
                                                                <button  @onclick="() => OnPreviewClick(t)" title="View" class="btn btn-info btn-sm"><i class="fa fa-eye"></i></button>
                                                                <a  href="tenant-templates-config/@t.Id" title="Edit" class="btn btn-primary btn-sm"><i class="fa fa-pencil-square-o"></i></a>
                                                                @*<button  title="Delete" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>*@
                                                            </td>
                                                        </tr>
                                                     }           
                                                </tbody>
                                   
                                           
                                             </table>

                                          </div>
                                      </div>
                            
                               </div>
                                <div class="tab-pane card-body pt-4" id="tabs-t-tab3">                              
                                      <div class="tab-pane card-body pt-4" id="tabs-t-tab3">
                                          <div class="table-responsive">
                                             <table id="whatsapp" class="table table-striped table-bordered nowrap">
                                                <thead>
                                                <tr role="row">
                                                    <th>ID</th>
                                                    <th>Template Name</th>
                                                    <th>IsActive</th>
                                                    <th>IsHtml</th>
                                                    <th>Campaign Type</th>
                                                    <th>Version</th>
                                                    <th>Preview</th>   
                                                </tr>
                                                </thead>
                                                <tbody> 
                                                     @foreach (var t in Templates.OrderByDescending(o=>o.Id).Where(o=>o.Type==CampaignType.Whatsapp))
                                                    {
                                                        <tr>
                           
                                                            <td>@t.Id </td>                        
                                                            <td>@t.Name </td>                        
                                                            <td>@t.IsActive</td>
                                                            <td>@t.IsHtml</td>
                                                            <td>@t.Type</td>
                                                            <td>@t.Version</td>
                  
                                                            <td>
                                                           
                                                                <button  @onclick="() => OnPreviewClick(t)" title="View" class="btn btn-info btn-sm"><i class="fa fa-eye"></i></button>
                                                                <a  href="tenant-templates-config/@t.Id" title="Edit" class="btn btn-primary btn-sm"><i class="fa fa-pencil-square-o"></i></a>
                                                                
                                                            </td>
                                                        </tr>
                                                     }           
                                                </tbody>
                                   
                                           
                                             </table>

                                          </div>
                                      </div>
                            
                               </div>

                       
                            </div>
                    </div>
                </div>


            </div>
        </div>
    </div>

</div>

}



<DialogTemplate Show="showPreview" Title="Template Preview">
    <br/>
    @if(sms is true)
    {
         <textarea class="col-sm-12" style="background-color:lavender; height:243px;" @bind="text"  disabled />                                                                         
        
        
    }
    else{ @previewContent}
   
    <br/>
    <button class="btn btn-warning col-md-12" @onclick="OnClosePreview">Close</button>

</DialogTemplate>

@code {

    [Parameter]
    public int Id { get; set; }

    public string Title
    {
        get
        {
            return model?.Id > 0 ? "Modify Template" : "Create New Template";
        }
    }
    string Message = string.Empty;
    bool IsError = false;
    bool IsSuccess = false;
    bool loading = false;

    string text = "";
    public bool sms = false;

    bool showPreview = false;
    bool showNewDialog = false;
    string content = string.Empty;
    MarkupString previewContent => (MarkupString)content;

    List<CampaignTemplate> Templates;
    CampaignType? type = null;
    CampaignTemplate model;

    #region Blazore Text Editor

    BlazoredTextEditor QuillHtml;
    string QuillHTMLContent;

    //public async Task GetHTML()
    //{
    //    model.Content = await this.QuillHtml.GetHTML();
    //    StateHasChanged();
    //}

    //public async void SetHTML()
    //{
    //    await this.QuillHtml.LoadHTMLContent(model.Content);

    //    StateHasChanged();
    //}
    #endregion


    protected override async Task OnInitializedAsync()
    {
        Templates = await client.GetTemplatesByType(type);

    }

    protected void OnPreviewClick(CampaignTemplate template)
    {
        showPreview = true;
        if(template.Type==CampaignType.Email)
        {
            sms = false;
            content = template.Content;           
        }
        if(template.Type==CampaignType.Sms)
        {
            sms = true;
            text = template.Content;           
        }

        
    }

    protected void OnClosePreview()
    {
        content = string.Empty;
        showPreview = false;
    }

    public void OnNewClick()
    {
        Message = string.Empty;
        model = new CampaignTemplate();
        model.Version = "1";
        showNewDialog = true;
    }

    public void OnEditClick(CampaignTemplate template)
    {
        Message = string.Empty;
        model = template;
        showNewDialog = true;
    }

    public async Task OnSave()
    {
        loading = true;

        try
        {
            if (model.Id > 0)
                Message = "Successfully Updated";
            else
                Message = "Successfully Added";

            //await GetHTML();

            model = await client.UpsertCampaignTemplate(model);

            IsSuccess = true;

            if (!Templates.Any(o => o.Id == model.Id))
                Templates.Add(model);
        }
        catch (Exception ex)
        {
            IsError = true;
            Message = ex.Message;
            logger.LogCritical(ex, ex.Message);
        }

        loading = false;

    }

    int pageSize = 5;
    int pageIndex = 0;
    int pageIndext = 0;
    public void Prevv()
    {
        
        if(pageIndex>0){ pageIndex--;} 
        pageIndext = pageIndex;
       // Templates =  client.GetCampaignTemplates(pageIndex, pageSize);
    }
    public void Nextt()
    {
        pageIndex++; 
        pageIndext = pageIndex;
     
    }
}
