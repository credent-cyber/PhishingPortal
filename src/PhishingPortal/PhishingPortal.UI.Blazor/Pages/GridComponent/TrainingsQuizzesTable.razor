@using GridShared
@using GridShared.Utility
@using Microsoft.Extensions.Primitives
@using PhishingPortal.Dto
@using PhishingPortal.UI.Blazor.Pages.GridButtons
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient
@inject AuthState authState;


@if (_task.IsCompleted)
{
    <div class="row">
        <div class="col-sm-12">
            <GridComponent T="TrainingQuizQuestion" Grid="@_grid"></GridComponent>
        </div>
    </div>
}
else
{
    <div class="col-sm-12" style="margin-top:5vh">

        <div class="card-header">
            <div class="loading-bar"></div>
        </div>

    </div>
}

@code
{
    private CGrid<TrainingQuizQuestion> _grid;
    private Task _task;

    Action<IGridColumnCollection<TrainingQuizQuestion>> columns = c =>
    {
        c.Add(o => o.Id).SetWidth("50px").Css("table-bordered").SetWidth("50px");
        c.Add(o => o.TrainingQuizId).Css("table-bordered").SetWidth("50px");
        c.Add(o => o.OrderNumber).Css("table-bordered").Titled("QuestionNumber").SetWidth("50px");
        c.Add(o => o.Question).Css("table-bordered");
        c.Add(o => o.AnswerType).SetWidth("50px").Css("table-bordered");
        c.Add(o => o.IsActive).Css("table-bordered").SetWidth("50px");
        c.Add().Encoded(false).Sanitized(false).RenderComponentAs<TrainingQuizzesEditButton>().SetWidth("50px").Titled("Edit");
    };

    protected override async Task OnParametersSetAsync()
    {
        string url = $"odata/TrainingQuiz?t={authState.TenantIdentifier}";
        var query = new QueryDictionary<StringValues>();
        query.Add("grid-sorting", "Id__1__1");

        var client = new GridODataClient<TrainingQuizQuestion>(HttpClient, url, query, false, "ordersGrid", columns, 10)
            //.Sortable()
            .Filterable(true)
            .ClearFiltersButton(true)
            .SetStriped(true)
            .WithMultipleFilters()
            .WithGridItemsCount()
            .SetExcelExport(true, "Quizzes.xlsx")
            .ChangePageSize(true)
            .EmptyText("No Data Available!!")
            .SetKeyboard(true)
            .Searchable(true, false, false);

        _grid = client.Grid;
        _task = client.UpdateGrid();
        await _task;
    }

}