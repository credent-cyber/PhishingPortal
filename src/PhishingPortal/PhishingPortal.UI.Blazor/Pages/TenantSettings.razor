@page "/tenant-settings"

@using PhishingPortal.Dto
@using PhishingPortal.UI.Blazor.Client
@using PhishingPortal.UI.Blazor.Models

@inject TenantClient client
@inject ILogger<TenantCampaigns> logger

<div class="row">
    <UiAlerts Model="alert"></UiAlerts>
</div>
<div class="row">
    <div class="card">
        <div class="card-header">
            <h5>Settings</h5>
        </div>
        <div class="card-body">
            <h6>Azure App Configurations</h6>
            <EditForm Model="model" OnValidSubmit="OnSave">
                <div class="card-body">
                    <div class="form-group row">
                        <label for="" class="col-form-label col-md-3" style="padding-right: 0;">Client ID<span style="color:red">*</span></label>
                        <div class="col-md-9">
                            <InputText @bind-Value="@model.ClientID" id="ClientID" class="form-control"></InputText>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="" class="col-form-label col-md-3" style="padding-right: 0;">Client Secret<span style="color:red">*</span></label>
                        <div class="col-md-9">
                            <InputText @bind-Value="@model.ClientSecret" id="ClientID" class="form-control"></InputText>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="" class="col-form-label col-md-3" style="padding-right: 0;">Tenant ID<span style="color:red">*</span></label>
                        <div class="col-md-9">
                            <InputText @bind-Value="@model.TenantID" id="TenantID" class="form-control"></InputText>
                        </div>
                    </div>
                    <div class="btn-group col-12">
                        <button type="submit" class="btn btn-primary">Save</button>

                    </div>
                </div>
            </EditForm>
        </div>
    </div>


</div>

@code {

    [CascadingParameter]
    protected AlertModel? alert { get; set; }

    private AzureRegistrationSettings model = new AzureRegistrationSettings();

    private bool isError = false;
    private bool isSucess = false;
    private string message = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var settings = await client.GetSettings();

        model = new AzureRegistrationSettings(settings);
    }

    public async void OnSave()
    {
        if (model != null)
        {
            alert?.Clear();
            try
            {
                var result = await client.UpsertSettings(model.ToSettingsDictionary());
                alert?.SetSuccess("Settings saved successfully!");
                StateHasChanged();
            }
            catch (Exception ex)
            {
                alert?.SetError("Error while saving!");
                logger.LogError(ex, ex.Message);
            }
        }
    }
}
