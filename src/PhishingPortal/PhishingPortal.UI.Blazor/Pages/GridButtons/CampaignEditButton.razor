@using GridShared
@using GridShared.Columns
@using GridShared.Utility
@using Microsoft.Extensions.Primitives
@using PhishingPortal.UI.Blazor.Client
@using PhishingPortal.Dto
@implements ICustomGridComponent<Campaign>
@inject NavigationManager NavigationManager


<LicencedView @ref="licencedViewRef" ShowLicenseWarning="false" AppModule="@(Item.Detail.Type==CampaignType.Email ? AppModules.EmailCampaign : (Item.Detail.Type==CampaignType.Sms ? AppModules.SmsCampaign : AppModules.WhatsAppCampaign))" ReadOnly="true" IsButton="true">
    <button style="border-radius:15px" class='btn btn-sm btn-primary @(licencedViewRef?.CurrentMode != AccessMode.ReadWrite ? "disabled-view" : "")'
            @onclick="(licencedViewRef?.CurrentMode == AccessMode.ReadWrite ? MyClickHandler : null)" title="Edit">
        <i class="fa fa-pencil-square-o"></i>
    </button>
</LicencedView>

@* <button class='btn btn-sm btn-primary' style="border-radius:15px" @onclick="MyClickHandler" title="Edit"><i class="fa fa-pencil-square-o"></i></button> *@

@code {

    private LicencedView licencedViewRef;

    [Parameter]
    public Campaign Item { get; set; }

    [Parameter]
    public CGrid<Campaign> Grid { get; set; }

    private void MyClickHandler(MouseEventArgs e)
    {
        //string gridState = Grid.GetState();
        //string returnUrl = (string)Object;
        NavigationManager.NavigateTo($"/tenant-campaign-config/{Item.Id}");
    }
}