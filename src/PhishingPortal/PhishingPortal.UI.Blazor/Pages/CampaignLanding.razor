@page "/cmpgn/{TenantId}/{Key}/{Url?}"
@page "/cmp/{TenantId}/{Key}/{Url?}"

<h3>@Title</h3>

@attribute [AllowAnonymous]

@using PhishingPortal.Dto
@using PhishingPortal.UI.Blazor.Client

@inject TenantClient client
@inject HttpClient httpClient;
@inject ILogger<TenantCampaigns> logger
@inject NavigationManager navigation

@code {

    public string Title { get; set; } = "Wait ....";

    [Parameter]
    public string Key { get; set; } = string.Empty;

       [Parameter]
    public string TenantId { get; set; } = string.Empty;

    [Parameter]
    public string Url { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // load campaign data
        // validate campaign
        // update campaign hit if valid

        try
        {
            var payload = new GenericApiRequest<string>() { Param = Key };
            var result = await httpClient.PostAsJsonAsync<GenericApiRequest<string>>($"api/tenant/campaign-hit?t={TenantId}", payload);
            result.EnsureSuccessStatusCode();

            if (result.IsSuccessStatusCode)
            {
                Redirect();
            }
            else
            {
                 navigation.NavigateTo("/error");
            }

            //if (await client.CampaignHit(Key))
            //    Redirect();
            //else
            //    navigation.NavigateTo("/error");
        }
        catch (Exception ex)
        {
            logger.LogCritical(ex, ex.Message);
            navigation.NavigateTo("/error");
        }

        await Task.CompletedTask;
    }

    private void Redirect()
    {
        if (!string.IsNullOrEmpty(Url))
        {
            try
            {
                if (new Uri(Url).Host == new Uri(navigation.Uri).Host)
                    navigation.NavigateTo(Url, true);
                else
                    navigation.NavigateTo("/");
            }
            catch (Exception ex)
            {
                logger.LogCritical(ex, ex.Message);
            }
        }
        else
        {
            navigation.NavigateTo("/");
        }
    }



}
