@page "/gridsample"

@using GridShared
@using GridShared.Utility
@using Microsoft.Extensions.Primitives
@using PhishingPortal.Dto
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient
@inject AuthState authState;


    @if (_task.IsCompleted)
    {
        <GridComponent T="CampaignTemplate" Grid="@_grid"></GridComponent>
    }
    else
    {
        <p><em>Loading...</em></p>
    }

    @code
    {
        private CGrid<CampaignTemplate> _grid;
        private Task _task;

        Action<IGridColumnCollection<CampaignTemplate>> columns = c =>
        {
            c.Add(o => o.Id);
            c.Add(o => o.CreatedOn);
            c.Add(o => o.Name);
            c.Add(o => o.IsActive);
            c.Add(o => o.Type);
        };

        protected override async Task OnParametersSetAsync()
        {
            string url = $"odata/template?t={authState.TenantIdentifier}";

            var query = new QueryDictionary<StringValues>();

            var client = new GridODataClient<CampaignTemplate>(HttpClient, url, query, false, "ordersGrid", columns, 10)
                .Sortable()
                .Filterable()
                .ClearFiltersButton(true)
                .SetStriped(true)
                .WithMultipleFilters()
                .WithGridItemsCount()
                .Searchable(true, false, false);

            _grid = client.Grid;

            // Set new items to grid
            _task = client.UpdateGrid();
            await _task;
        }
    }