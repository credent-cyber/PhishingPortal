@page "/request_demo"

@using PhishingPortal.UI.Blazor.Models
@using PhishingPortal.UI.Blazor.Shared
@using PhishingPortal.Dto;
@using PhishingPortal.Common;
@using PhishingPortal.UI.Blazor.Client;
@using System.Text.RegularExpressions
@inject RequestClient client
@inject NavigationManager NavManager
@inject TenantAdminClient AdminClient
@inject ILogger<DemoRequestor> logger
@layout BlankLayout


<div class="auth-wrapper" style="background:white !important; margin-bottom: 20px;">
    <div style="width:500px;">
        <div class="card text-center">

            <img src="custom/assets/images/ps.png" alt="logo" class="img-fluid mb-1" style="height:35px; width:100px; margin: 0 auto;">
            <div style="background: rgb(121,199,233); border-radius:25px">
                <h3 style="margin:0 !important; padding:5px"><span style="color:white">Request a Demo</span></h3>
            </div>

            <br />
            <div class="card-body" style="padding:0 15px !important">
                <EditForm Model="@Model" OnInvalidSubmit="@OnValidSubmit">
                    <DataAnnotationsValidator />
                    <div class="form-group row">
                        <label class="col-md-4 col-form-label bold-font required-field text-left">Your Name</label>
                        <div class="col-sm-8">
                            <InputText @bind-Value="@Model.FullName" class="form-control" id="FullName" placeholder="Name"></InputText>
                            <ValidationMessage style="text-align: left;" For="() => Model.FullName" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-md-4 col-form-label bold-font required-field text-left">Company Name</label>
                        <div class="col-sm-8">
                            <InputText class="form-control" id="Company" placeholder="Company" @bind-Value="@Model.Company"></InputText>
                            <ValidationMessage style="text-align: left;" For="() => Model.Company" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-md-4 col-form-label bold-font required-field text-left">Email</label>
                        <div class="col-sm-8">
                            <InputText type="email" class="form-control" id="Email" placeholder="example@email.com" @bind-Value="@Model.Email"></InputText>
                            <ValidationMessage style="text-align: left;" For="() => Model.Email" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-md-4 col-form-label bold-font text-left">Mobile No.</label>
                        <div class="col-sm-8">
                            <InputText class="form-control" id="ContactNumber" placeholder="98XXXXXXXX" @bind-Value="@Model.ContactNumber"> </InputText>
                            <ValidationMessage style="text-align: left;" For="() => Model.ContactNumber" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-md-4 col-form-label bold-font text-left">Message</label>
                        <div class="col-sm-8">
                            <InputTextArea class="form-control" placeholder="..." @bind-Value="@Model.Messages" style="height:100px;"></InputTextArea>
                            <ValidationMessage style="text-align: left;" For="() => Model.Messages" />
                        </div>
                    </div>
                    <div class="col-12">
                        @if (submit is true)
                        {
                            <button @onclick="OnValidSubmit" class="btn btn-primary" disabled>Submit</button>
                            <button @onclick="Close" class="btn btn-secondary">Close</button>
                        }
                        else
                        {
                            <button @onclick="OnValidSubmit" class="btn btn-primary">Submit</button>
                            <button @onclick="Close" class="btn btn-secondary">Close</button>
                        }
                    </div>
                </EditForm>


                <div style="text-align:center;"><a href="/login">Already have login credential?</a></div>
            </div>
        </div>
    </div>
</div>

<Dailog Title="Successfully Submitted!" Show="show" OnCloseDialog="Close">
    @if (show)
    {
        <div style="text-align:center;">
            We'll get back to you soon...
        </div>
    }
</Dailog>

@code {

    private bool isError = false;
    private bool isSucess = false;
    private string message = string.Empty;
    private bool show = false;
    private bool submit = false;

    DemoRequestor Model = new DemoRequestor();


    protected async Task OnValidSubmit()
    {
        message = string.Empty;

        if (@Model.Email is not null)
        {
            var formate = Regex.IsMatch(@Model.Email, @".+@.+\..+");
            var email = Model.Email.Split("@")[1];
            var restrictMail = AppConfig.restrictEmail;
            foreach (var mail in restrictMail)
            {
                if (email.Contains(mail))
                {
                    isSucess = false;
                    isError = true;
                    message = "Please provide your Company Email!";
                    return;
                }
            }

            if (!formate)
            {
                isSucess = false;
                isError = true;
                message = "Invalid Email!";
                return;
            }
        }

        try
        {
            var result = await client.CreateDemoRequest(Model);
            isSucess = true;
            isError = false;
            message = "Saved!";
            show = true;
            submit = true;
        }
        catch (Exception ex)
        {
            logger.LogCritical(ex, ex.Message);
            isError = true;
            message = "Error while Submitting!";
        }

    }


    private void Close()
    {
        show = false;
        NavManager.NavigateTo("/");
    }

}
