@page "/request_demo"

@using PhishingPortal.UI.Blazor.Models
@using PhishingPortal.UI.Blazor.Shared
@using PhishingPortal.Dto;
@using PhishingPortal.Common;
@using PhishingPortal.UI.Blazor.Client;
@using System.Text.RegularExpressions
@inject RequestClient client
@inject NavigationManager NavManager
@inject TenantAdminClient AdminClient
@inject ILogger<DemoRequestor> logger
@layout BlankLayout


<div class="auth-wrapper" style="background:white !important; margin-bottom: 20px;">
    <div style="width:500px; margin-top:3vh">
        <div class="card text-center">

            <div>
                <img src="~/custom/assets/images/ps.png" alt="" class="img-fluid mb-4">
                <h3 class="mb-3"><span class="text-c-blue">Request a Demo</span></h3>
            </div>

            <div class="card-body p-3">
                @if (isError)
                {
                    <div class="alert alert-warning" role="alert"> @message </div>
                }
                @if (isSucess)
                {
                    <div class="alert alert-success" role="alert"> @message </div>
                }
            </div>
            <div class="card-body" style="padding:0 15px !important">
                <EditForm Model="@Model" OnInvalidSubmit="@OnValidSubmit">
                    <DataAnnotationsValidator />
                    <div class="form-group row">
                        <label for="colFormLabel" class="col-sm-4 col-form-label" style="font-weight:700">Your Name</label>
                        <div class="col-sm-8">
                            <InputText @bind-Value="@Model.FullName" class="form-control" id="name" placeholder="Name" required></InputText>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabel" class="col-sm-4 col-form-label" style="font-weight:700">Company Name</label>
                        <div class="col-sm-8">
                            <InputText class="form-control" id="company" name="company" placeholder="Company" @bind-Value="@Model.Company" required></InputText>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabel" class="col-sm-4 col-form-label" style="font-weight:700">Email</label>
                        <div class="col-sm-8">
                            <InputText type="email" class="form-control" id="email" name="email" placeholder="example@email.com" required @bind-Value="@Model.Email"></InputText>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabel" class="col-sm-4 col-form-label" style="font-weight:700">Mobile No.</label>
                        <div class="col-sm-8">
                            <InputText class="form-control" id="contactno" name="contactno" placeholder="Contact Number" @bind-Value="@Model.ContactNumber"> </InputText>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabel" class="col-sm-4 col-form-label" style="font-weight:700">Message</label>
                        <div class="col-sm-8">
                            <InputTextArea class="form-control" placeholder="..." @bind-Value="@Model.Messages" style="height:100px;"></InputTextArea>
                        </div>
                    </div>
                </EditForm>
                <div class="col-12">
                    @if (submit is true)
                    {
                        <button @onclick="OnValidSubmit" class="btn btn-primary" disabled>Submit</button>
                        <button @onclick="Close" class="btn btn-secondary">Close</button>
                    }
                    else
                    {
                        <button @onclick="OnValidSubmit" class="btn btn-primary">Submit</button>
                        <button @onclick="Close" class="btn btn-secondary">Close</button>
                    }
                </div>

                <div style="text-align:center;"><a href="/login">Already have login credential?</a></div>
            </div>
        </div>
    </div>
</div>

<Dailog Title="Successfully Submitted!" Show="show" OnCloseDialog="Close">
    @if (show)
    {
        <div style="text-align:center;">
            We'll get back to you soon...
        </div>
    }
</Dailog>

@code {

    private bool isError = false;
    private bool isSucess = false;
    private string message = string.Empty;
    private bool show = false;
    private bool submit = false;

    DemoRequestor Model = new DemoRequestor();


    protected async Task OnValidSubmit()
    {
        message = string.Empty;

        if (@Model.FullName is null || @Model.Company is null || @Model.Email is null)
        {
            isError = true;
            isSucess = false;
            message = "Name, Company and Email can't be empty!";
            return;
        }
        if (@Model.Email is not null)
        {
            var formate = Regex.IsMatch(@Model.Email, @".+@.+\..+");
            var email = Model.Email.Split("@")[1];
            var restrictMail = AppConfig.restrictEmail;
            foreach (var mail in restrictMail)
            {
                if (email.Contains(mail))
                {
                    isSucess = false;
                    isError = true;
                    message = "Please provide your Company Email!";
                    return;
                }
            }

            if (!formate)
            {
                isSucess = false;
                isError = true;
                message = "Invalid Email!";
                return;
            }
        }

        try
        {
            var result = client.CreateDemoRequest(Model);
            isSucess = true;
            isError = false;
            message = "Saved!";
            show = true;
            submit = true;
        }
        catch (Exception ex)
        {
            logger.LogCritical(ex, ex.Message);
            isError = true;
            message = "Error while Submitting!";
        }

    }


    private void Close()
    {
        show = false;
        NavManager.NavigateTo("/");
    }

}
