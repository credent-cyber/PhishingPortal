@page "/request_demo"

@using PhishingPortal.UI.Blazor.Models
@using PhishingPortal.UI.Blazor.Shared
@using PhishingPortal.Dto;
@using PhishingPortal.UI.Blazor.Client;
@using System.Text.RegularExpressions
@inject NavigationManager NavManager
@inject TenantAdminClient AdminClient
@inject ILogger<DemoRequestor> logger
@layout BlankLayout
@inject IHttpClientFactory ClientFactory



@*    <div class="auth-wrapper" style="background:white !important;">
        <div style="width:600px; ">
            <div class="card text-center">
                <div class="card-body" >
                     <div>
                         <img src="~/custom/assets/images/ps.png" alt="" class="img-fluid mb-4" >
                         <h3 class="mb-3"><span class="text-c-blue">Request a Demo</span></h3>
                     </div>

                      <div class="card-body p-3">
                           @if(isError){ <div class="alert alert-warning" role="alert"> @message </div>}
                           @if(isSucess){ <div class="alert alert-success" role="alert"> @message </div>}
                                       
                                   
                            <!--Body-->
                            <EditForm Model="@Model" OnInvalidSubmit="@OnValidSubmit">
                                <DataAnnotationsValidator/>
                                <ValidationSummary/>
                                <div class="form-group">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text"><i class="fa fa-user text-"></i></div>
                                        </div>
                                        <InputText @bind-Value="@Model.FullName" class="form-control" id="name" placeholder="Name" required></InputText>
                                    </div>
                                </div>
                                 <div class="form-group">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text"><i class="fa fa-phone text-"></i></div>
                                        </div>
                                        <InputNumber  class="form-control" id="contactno" name="contactno"  placeholder="Contact Number" @bind-Value="@Model.ContactNumber"> </InputNumber>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text"><i class="fa fa-building text-"></i></div>
                                        </div>
                                        <InputText class="form-control" id="company" name="company" placeholder="Company" @bind-Value="@Model.Company" required></InputText>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text"><i class="fa fa-envelope text-"></i></div>
                                        </div>
                                        <InputText type="email" class="form-control" id="email" name="email" placeholder="example@email.com" required @bind-Value="@Model.Email"></InputText>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text"><i class="fa fa-comment text-"></i></div>
                                        </div>
                                        <InputTextArea class="form-control" placeholder="..." @bind-Value="@Model.Messages" style="height:100px;"></InputTextArea>
                                    </div>
                                </div>
                            </EditForm>
                      </div>

                      <div class="col-12">
                           <button  @onclick="OnValidSubmit" class="btn btn-primary">Submit</button>
                           <button @onclick="Close" class="btn btn-secondary">Close</button>
                      </div>
                      <div style="text-align:center;"><a href="authentication/login">Already have login credential?</a></div>
                </div>        
            </div>
        </div>
    </div>*@
<div class="auth-wrapper" style="background:white !important;">
        <div style="width:600px; margin-top:9vh">
            <div class="card text-center">

                <div>
                  <img src="~/custom/assets/images/ps.png" alt="" class="img-fluid mb-4" >
                  <h3 class="mb-3"><span class="text-c-blue">Request a Demo</span></h3>
                </div>

                <div class="card-body p-3" >
                   @if(isError){ <div class="alert alert-warning" role="alert"> @message </div>}
                   @if(isSucess){ <div class="alert alert-success" role="alert"> @message </div>}
                </div>       
                <div class="card-body" >
                   <EditForm Model="@Model" OnInvalidSubmit="@OnValidSubmit">
                      <DataAnnotationsValidator/>
                      <div class="form-group row">
                        <label for="colFormLabel" class="col-sm-4 col-form-label">Your Name</label>
                        <div class="col-sm-8">
                          <InputText @bind-Value="@Model.FullName" class="form-control" id="name" placeholder="Name" required></InputText>
                        </div>
                      </div>
                      <div class="form-group row">
                        <label for="colFormLabel" class="col-sm-4 col-form-label">Company Name</label>
                        <div class="col-sm-8">
                           <InputText class="form-control" id="company" name="company" placeholder="Company" @bind-Value="@Model.Company" required></InputText>
                        </div>
                      </div>
                      <div class="form-group row">
                        <label for="colFormLabel" class="col-sm-4 col-form-label">Email</label>
                        <div class="col-sm-8">
                          <InputText type="email" class="form-control" id="email" name="email" placeholder="example@email.com" required @bind-Value="@Model.Email"></InputText>
                        </div>
                      </div>
                      <div class="form-group row">
                        <label for="colFormLabel" class="col-sm-4 col-form-label">Mobile No.</label>
                        <div class="col-sm-8">
                          <InputNumber  class="form-control" id="contactno" name="contactno"  placeholder="Contact Number" @bind-Value="@Model.ContactNumber"> </InputNumber>
                        </div>
                      </div>
                      <div class="form-group row">
                           <label for="colFormLabel" class="col-sm-4 col-form-label">Message</label>
                            <div class="col-sm-8">     
                               <InputTextArea class="form-control" placeholder="..." @bind-Value="@Model.Messages" style="height:100px;"></InputTextArea>
                            </div>
                      </div>
                   </EditForm>
                   <div class="col-12">
                    @if(submit is true){ 
                       <button  @onclick="OnValidSubmit" class="btn btn-primary" disabled>Submit</button>
                       <button @onclick="Close" class="btn btn-secondary">Close</button>
                    }
                    else{
                          <button  @onclick="OnValidSubmit" class="btn btn-primary" >Submit</button>                       
                          <button @onclick="Close" class="btn btn-secondary">Close</button>
                    }
                   </div>

                   <div style="text-align:center;"><a href="authentication/login">Already have login credential?</a></div>
                </div>
            </div>
        </div>
</div>

<Dailog Title="Successfully Submitted!" Show="show">
    @if(show)
    {
       <div style="text-align:center;">
           We'll get back to you soon...
       </div>
    }
</Dailog>

@code {

    private bool isError = false;
    private bool isSucess = false;
    private string message = string.Empty;
    private bool show = false;
    private bool submit = false;

    DemoRequestor Model = new DemoRequestor();


    protected async Task OnValidSubmit()
    {
        message = string.Empty;

        if (@Model.FullName is null || @Model.Company is null || @Model.Email is null)
        {
            isError = true;
            isSucess = false;
            message = "Name, Company and Email can't be empty!";
            return;
        }
        if (@Model.Email is not null)
        {
            var formate = Regex.IsMatch(@Model.Email, @".+@.+\..+");
            var email = Model.Email.Split("@")[1];
            if(email.Contains("gmail")||email.Contains("yahoo")||email.Contains("outlook"))
            {
                isSucess = false;
                isError = true;
                message = "Please provide your Company Email!";
                return;
            }
            if (!formate)
            {
                isSucess = false;
                isError = true;
                message = "Invalid Email!";
                return;
            }
        }

         // Create a httpClient to use for non-authenticated calls
          var  NoAuthenticationClient =
                 ClientFactory.CreateClient(
                     "ServerAPI.NoAuthenticationClient");

   

        try
        {
            _ = await NoAuthenticationClient.PostAsJsonAsync($"api/request/upsert_demorequestor", Model);
          // Model = await AdminClient.UpsertDemoRequestorAsync(Model);
            isSucess = true;
            isError = false;
            message = "Saved!";
            show = true;
            submit = true;
        }
        catch (Exception ex)
        {
            logger.LogCritical(ex, ex.Message);
            isError = true;
            message = "Error while Submitting!";
        }

    }


    private void Close()
    {
        NavManager.NavigateTo("/");
    }

}
