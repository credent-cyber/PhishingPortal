@using PhishingPortal.UI.Blazor.Client;

@inject TenantClient client
@inject CustomStateProvider StateProvider
@inject NavigationManager Navigation

@if (IsValid)
{
    @ChildContent
}
else
{
    @if (ShowLicenseWarning)
    {
        <h2 style="margin-top:22%;margin-left:22%;">No Active Subscription</h2>
        <div class="row">
            <button type="button" class="btn btn-link" @onclick="BeginSignOut">Go back</button>
        </div>
    }
}

@code {

    private bool IsValid = false;

    [Parameter]
    public bool ShowLicenseWarning { get; set; } = true;

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var subscriptionInfo = await client.GetSubscription();

        if (subscriptionInfo == null)
            IsValid = false;
        else
        {
            IsValid = true;
        }

        await base.OnInitializedAsync();
    }

    private async Task BeginSignOut()
    {
        await StateProvider.Logout();
        Navigation.NavigateTo("/");
    }
}
