@using PhishingPortal.Dto.Dashboard
@inject IJSRuntime JSRuntime

<canvas id="@Id"></canvas>


@code {
    

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public ChartType Type { get; set; }

    [Parameter]
    public string[] Data { get; set; }

    [Parameter]
    public string[] BackgroundColor { get; set; }

    [Parameter]
    public string[] Labels { get; set; }

    [Parameter]
    public bool Responsive { get; set; } = true;

    [Parameter]
    public bool IsStacked { get; set; }

    [Parameter]
    public List<ChartJsDataset> Datasets { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // Here we create an anonymous type with all the options
        // that need to be sent to Chart.js
        if (Datasets == null || Datasets.Count() == 0)
            return;

        if (!IsStacked)
        {
            var config = new
            {
                Type = Type.ToString().ToLower(),

                Data = new
                {
                    Labels = Labels,
                    
                    Datasets = Datasets.Select(o => new
                    {
                        Label = o.Label,
                        Data = o.Data,
                        BackgroundColor = o.BackgroundColor
                    })

                },

                Options = new
                {
                    Responsive = Responsive,
                }

            };

            await JSRuntime.InvokeVoidAsync("setup", Id, config);
        }

    }
}
